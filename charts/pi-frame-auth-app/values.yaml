# Default values for pi-frame-auth-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

webapp:
  repository: ghcr.io/frobobbo/piphoto-auth-app
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest
imagePullSecrets:
  - name: gitauth

db:
  repository: ghcr.io/frobobbo/piphoto-auth-db
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest
#  initdbScripts:
#    init.sql: |
#      CREATE USER '${APP_DB_USER:-}'@'localhost' IDENTIFIED BY '${APP_USER_PASS:-}';
#      GRANT ALL PRIVILEGES ON '${APP_DB_NAME:-}'.* TO '${APP_DB_USER:-}'@'localhost';
  auth:
  
imagePullSecrets:
  - name: gitauth

imageCredentials:
  registry: ghcr.io
  user: frobobbo
  auth: 
  email: johnsobd@gmail.com

nameOverride: ""
fullnameOverride: ""

hostAliases:
  ## Necessary for apache-exporter to work
  ##
  - ip: "127.0.0.1"
    hostnames:
      - "status.localhost"

phpmyadmin:
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  webapp:
    type: ClusterIP
    port: 8080
  db:
    type: ClusterIP
    port: 3306

application:
  DB_NAME: "photoframeUsers"
  DB_USER: "authUsr"

#mysql:
#  persistence:
#    enabled: true
#    size: 15G

ingress:
  enabled: false
#  className: ""
#  annotations:
#    cert-manager.io/cluster-issuer: letsencrypt-prod
#    ingress.kubernetes.io/force-ssl-redirect: true
#    ingress.kubernetes.io/proxy-body-size: 0
#    ingress.kubernetes.io/ssl-redirect: true
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
#  hosts:
#    - host: auth.cstoneweb.com
#      paths:
#        - path: /
#          pathType: ImplementationSpecific
 # tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
