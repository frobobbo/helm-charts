apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bookstack.fullname" . }}
  labels:
    {{- include "bookstack.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "bookstack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bookstack.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bookstack.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.app.repository }}:{{ .Values.app.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.pullPolicy }}
          env:
            - name: DB_HOST
              value: {{ include "bookstack.fullname" . }}-db
            - name: DB_PORT
              value: '{{ .Values.service.db.port }}'
            - name: DB_USER
              value: {{ .Values.env.DB_USER }}
            - name: PUID
              value: '1000'
            - name: PGID
              value: '1000'
            - name: APP_URL
              value: {{ .Values.env.APP_URL }}
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: password
            - name: DB_DATABASE
              value: {{ .Values.env.DB_DATABASE }}
          ports:
            - name: http
              containerPort: {{ .Values.service.app.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /login
              port: {{ .Values.service.app.port }}
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /login
              port: {{ .Values.service.app.port }}
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 15
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
